(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{420:function(e,t,a){"use strict";a.r(t);var s=a(15),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"eslint-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-命令"}},[e._v("#")]),e._v(" ESLint 命令")]),e._v(" "),a("p",[e._v("为了在 Node.js 上运行 ESLint，你必须先安装 npm。如果还没有安装 npm ，按照这里的说明进行安装："),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.npmjs.com/"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("一旦安装了 npm，运行下面的命令")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm i -g eslint\n\n")])])]),a("p",[e._v("这句命令从 npm 仓库安装了 ESLint CLI。使用以下格式运行 ESLint：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint [options] [file|dir|glob]*\n\n")])])]),a("p",[e._v("比如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint file1.js file2.js\n\n")])])]),a("p",[e._v("或者：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint lib/**\n\n")])])]),a("p",[e._v("请注意，传递一个 glob 模式作为参数时，它将由你的 shell 进行扩展。扩展的结果取决于你的 shell 及其配置。如果你想使用 node 的  "),a("code",[e._v("glob")]),e._v("  语法，你需要给参数加上引号（在 windows 系统运行时，如果你需要，也可以使用双引号 ），像下面这样：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('eslint "lib/**"\n\n')])])]),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[e._v("#")]),e._v(" 选项")]),e._v(" "),a("p",[e._v("命令行工具有几个选项，你可以通过运行  "),a("code",[e._v("eslint -h")]),e._v("  查看所有选项。")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("eslint "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" file.js "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("file.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\nBasic configuration:\n  -c, --config path::String    Use configuration from this "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" or shareable config\n  --no-eslintrc                Disable use of configuration from .eslintrc\n  --env "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("               Specify environments\n  --ext "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("               Specify JavaScript "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" extensions - default: .js\n  --global "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("            Define global variables\n  --parser String              Specify the parser to be used\n  --parser-options Object      Specify parser options\n\nCaching:\n  --cache                      Only check changed files - default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  --cache-file path::String    Path to the cache file. Deprecated: use --cache-location - default: .eslintcache\n  --cache-location path::String  Path to the cache "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" or directory\n\nSpecifying rules and plugins:\n  --rulesdir "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("path::String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    Use additional rules from this directory\n  --plugin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("            Specify plugins\n  --rule Object                Specify rules\n\nIgnoring files:\n  --ignore-path path::String   Specify path of ignore "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n  --no-ignore                  Disable use of ignore files and patterns\n  --ignore-pattern "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    Pattern of files to ignore "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("in addition to those "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" .eslintignore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nUsing stdin:\n  --stdin                      Lint code provided on "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("STDIN"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" - default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  --stdin-filename String      Specify filename to process STDIN as\n\nHandling warnings:\n  --quiet                      Report errors only - default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  --max-warnings Int           Number of warnings to trigger nonzero "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v(" code - default: -1\n\nOutput:\n  -o, --output-file path::String  Specify "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" to "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("write")]),e._v(" report to\n  -f, --format String          Use a specific output "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("format")]),e._v(" - default: stylish\n  --color, --no-color          Force enabling/disabling of color\n\nMiscellaneous:\n  --init                       Run config initialization wizard - default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n  --fix                        Automatically fix problems\n  --debug                      Output debugging information\n  -h, --help                   Show "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("help")]),e._v("\n  -v, --version                Output the version number\n  --no-inline-config           Prevent comments from changing config or rules\n  --print-config path::String  Print the configuration "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" the given "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n")])])]),a("p",[e._v("这些选项可以通过重复该选项或使用逗号分隔的列表进行指定（除了  "),a("code",[e._v("--ignore-pattern")]),e._v("  不允许第二种风格）。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("eslint --ext .jsx --ext .js  lib/\neslint --ext .jsx,.js  lib/\n")])])]),a("h3",{attrs:{id:"基本配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本配置"}},[e._v("#")]),e._v(" 基本配置")]),e._v(" "),a("h4",{attrs:{id:"c-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-config"}},[e._v("#")]),e._v(" "),a("code",[e._v("-c")]),e._v(", "),a("code",[e._v("--config")])]),e._v(" "),a("p",[e._v("该选项允许你为 ESLint (查看  "),a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"}},[e._v("Configuring ESLint"),a("OutboundLink")],1),e._v("  了解更多)指定一个额外的配置文件。")]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint -c ~/my-eslint.json file.js\n")])])]),a("p",[e._v("这个例子使用了  "),a("code",[e._v("~/my-eslint.json")]),e._v("  作为配置文件。")]),e._v(" "),a("p",[e._v("它还接受  "),a("a",{attrs:{href:"https://cn.eslint.org/docs/developer-guide/shareable-configs",target:"_blank",rel:"noopener noreferrer"}},[e._v("sharable config"),a("OutboundLink")],1),e._v("  的一个模块的 ID。")]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint -c myconfig file.js\n")])])]),a("p",[e._v("这个例子直接使用可共享的配置  "),a("code",[e._v("eslint-config-myconfig")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"no-eslintrc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-eslintrc"}},[e._v("#")]),e._v(" "),a("code",[e._v("--no-eslintrc")])]),e._v(" "),a("p",[e._v("禁用  "),a("code",[e._v(".eslintrc")]),e._v("  和  "),a("code",[e._v("package.json")]),e._v("  文件中的配置。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --no-eslintrc file.js\n\n")])])]),a("h4",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[e._v("#")]),e._v(" "),a("code",[e._v("--env")])]),e._v(" "),a("p",[e._v("这个选项用来指定环境。关于每种环境中定义的全局变量的详细信息请查看  "),a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"}},[e._v("configuration"),a("OutboundLink")],1),e._v("  文档。该选项只能启用环境，不能禁用在其它配置文件中设置的环境。要指定多个环境的话，使用逗号分隔它们，或多次使用这个选项。")]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --env browser,node file.js\neslint --env browser --env node file.js\n\n")])])]),a("h4",{attrs:{id:"ext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ext"}},[e._v("#")]),e._v(" "),a("code",[e._v("--ext")])]),e._v(" "),a("p",[e._v("这个选项允许你指定 ESLint 在指定的目录下查找 JavaScript 文件时要使用的文件扩展名。默认情况下，它使用  "),a("code",[e._v(".js")]),e._v("  作为唯一性文件扩展名。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Use only .js2 extension\neslint . --ext .js2\n\n# Use both .js and .js2\neslint . --ext .js --ext .js2\n\n# Also use both .js and .js2\neslint . --ext .js,.js2\n\n")])])]),a("p",[e._v("**注意：**如果你使用了 glob 模式，则  "),a("code",[e._v("--ext")]),e._v("  被忽略")]),e._v(" "),a("p",[e._v("例如，"),a("code",[e._v("eslint lib/* --ext .js")]),e._v("  将匹配  "),a("code",[e._v("lib/")]),e._v("  下的所有文件，忽略扩展名。")]),e._v(" "),a("h4",{attrs:{id:"global"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global"}},[e._v("#")]),e._v(" "),a("code",[e._v("--global")])]),e._v(" "),a("p",[e._v("这个选项定义了全局变量，这样它们就不会被  "),a("code",[e._v("no-undef")]),e._v("  规则标记为未定义了。任何指定的全局变量默认是只读的，在变量名字后加上  "),a("code",[e._v(":true")]),e._v("  后会使它变为可写。要指定多个变量，使用逗号分隔它们，或多次使用这个选项。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --global require,exports:true file.js\neslint --global require --global exports:true\n\n")])])]),a("h4",{attrs:{id:"parser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parser"}},[e._v("#")]),e._v(" "),a("code",[e._v("--parser")])]),e._v(" "),a("p",[e._v("该选项允许你为 ESLint 指定一个解析器。默认情况下，使用  "),a("code",[e._v("espree")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"parser-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parser-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("--parser-options")])]),e._v(" "),a("p",[e._v("该选项允许你指定 ESLint 要使用的解析器选项。注意，可用的解析器选项取决于你所选用的解析器。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("echo '3 ** 4' | eslint --stdin --parser-options=ecmaVersion:6 # will fail with a parsing error\necho '3 ** 4' | eslint --stdin --parser-options=ecmaVersion:7 # succeeds, yay!\n\n")])])]),a("h3",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),a("h4",{attrs:{id:"cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache"}},[e._v("#")]),e._v(" "),a("code",[e._v("--cache")])]),e._v(" "),a("p",[e._v("存储处理过的文件的信息以便只对有改变的文件进行操作。缓存默认被存储在  "),a("code",[e._v(".eslintcache")]),e._v("。启用这个选项可以显著改善 ESLint 的运行时间，确保只对有改变的文件进行检测。")]),e._v(" "),a("p",[e._v("**注意：**如果你运行 ESLint "),a("code",[e._v("--cache")]),e._v("，然后又运行 ESLint 不带  "),a("code",[e._v("--cache")]),e._v("，"),a("code",[e._v(".eslintcache")]),e._v("  文件将被删除。这是必要的，因为检测的结果可能会改变，使  "),a("code",[e._v(".eslintcache")]),e._v("  无效。如果你想控制缓存文件何时被删除，那么使用  "),a("code",[e._v("--cache-location")]),e._v("  来指定一个缓存文件的位置。")]),e._v(" "),a("h4",{attrs:{id:"cache-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-file"}},[e._v("#")]),e._v(" "),a("code",[e._v("--cache-file")])]),e._v(" "),a("p",[e._v("缓存文件的路径。如果没有指定，则使用  "),a("code",[e._v(".eslintcache")]),e._v("。这个文件会在  "),a("code",[e._v("eslint")]),e._v("  命令行被执行的文件目录中被创建。 "),a("strong",[e._v("已弃用：")]),e._v("  请使用  "),a("code",[e._v("--cache-location")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"cache-location"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-location"}},[e._v("#")]),e._v(" "),a("code",[e._v("--cache-location")])]),e._v(" "),a("p",[e._v("缓存文件的路径。可以是一个文件或者一个目录。如果没有指定，则使用  "),a("code",[e._v(".eslintcache")]),e._v(" 。这个文件会在  "),a("code",[e._v("eslint")]),e._v("  命令行被执行的文件目录中被创建。")]),e._v(" "),a("p",[e._v("如果指定一个目录，缓存文件将在指定的文件夹下被创建。文件名将基于当前工作目录（CWD) 的 hash 值，比如："),a("code",[e._v(".cache_hashOfCWD")]),e._v("。")]),e._v(" "),a("p",[e._v("**重要提示：**如果不存在缓存文件的目录，请确保在尾部添加  "),a("code",[e._v("/")]),e._v("（*nix 系统）或  "),a("code",[e._v("\\")]),e._v("（windows 系统）。否则该路径将被假定为是一个文件。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('eslint "src/**/*.js" --cache --cache-location "/Users/user/.eslintcache/"\n\n')])])]),a("h3",{attrs:{id:"指定规则和插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定规则和插件"}},[e._v("#")]),e._v(" 指定规则和插件")]),e._v(" "),a("h4",{attrs:{id:"rulesdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rulesdir"}},[e._v("#")]),e._v(" "),a("code",[e._v("--rulesdir")])]),e._v(" "),a("p",[e._v("这个选项允许你指定另一个加载规则文件的目录。这允许你在运行时动态加载新规则。当你有自定义规则，而且这些规则不适合绑定到 ESLint 时，这会很有用。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --rulesdir my-rules/ file.js\n\n")])])]),a("p",[e._v("为了使你自定义的规则目录下的规则正常工作，必须遵照同绑定的规则一样的格式。你也可以通过包含多个  "),a("code",[e._v("--rulesdir")]),e._v("  选项来为自定义规则指定多个位置。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --rulesdir my-rules/ --rulesdir my-other-rules/ file.js\n\n")])])]),a("p",[e._v("注意，与核心规则和插件规则一样，你仍需要在配置文件或通过  "),a("code",[e._v("--rule")]),e._v("  命令行选项启用这些规则，以便在检测过程中实际运行这些规则。使用  "),a("code",[e._v("--rulesdir")]),e._v("  指定一个规则目录不会自动启用那些目录下的规则。")]),e._v(" "),a("h4",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[e._v("#")]),e._v(" "),a("code",[e._v("--plugin")])]),e._v(" "),a("p",[e._v("这个选项指定一个要加载的插件。你可以省略插件名的前缀  "),a("code",[e._v("eslint-plugin-")]),e._v("。在你使用插件直接，你必须使用 npm 安装它。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --plugin jquery file.js\neslint --plugin eslint-plugin-mocha file.js\n\n")])])]),a("h4",{attrs:{id:"rule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rule"}},[e._v("#")]),e._v(" "),a("code",[e._v("--rule")])]),e._v(" "),a("p",[e._v("这个选项指定要使用的规则。这些规则将会与配制文件中指定的规则合并。（你可以使用  "),a("code",[e._v("--no-eslintrc")]),e._v("  改变这种行为。）要定义多个规则，使用逗号分隔它们，或多次使用这个选项。"),a("a",{attrs:{href:"https://github.com/gkz/levn#levn--",target:"_blank",rel:"noopener noreferrer"}},[e._v("levn"),a("OutboundLink")],1),e._v("  格式被用来指定规则。")]),e._v(" "),a("p",[e._v("如果这个规则定义在插件内，你必须在规则 ID 前使用插件名和  "),a("code",[e._v("/")]),e._v("，即  "),a("code",[e._v("插件名/规则ID")]),e._v("。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --rule 'quotes: [2, double]'\neslint --rule 'guard-for-in: 2' --rule 'brace-style: [2, 1tbs]'\neslint --rule 'jquery/dollar-sign: 2'\n\n")])])]),a("h3",{attrs:{id:"忽略文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[e._v("#")]),e._v(" 忽略文件")]),e._v(" "),a("h4",{attrs:{id:"ignore-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignore-path"}},[e._v("#")]),e._v(" "),a("code",[e._v("--ignore-path")])]),e._v(" "),a("p",[e._v("这个选项允许你指定一个文件作为  "),a("code",[e._v(".eslintignore")]),e._v("。默认情况下，ESLint 在当前工作目录下查找  "),a("code",[e._v(".eslintignore")]),e._v("。你可以通过提供另一个文件的路径改变这种行为。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --ignore-path tmp/.eslintignore file.js\neslint --ignore-path .gitignore file.js\n\n")])])]),a("h4",{attrs:{id:"no-ignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-ignore"}},[e._v("#")]),e._v(" "),a("code",[e._v("--no-ignore")])]),e._v(" "),a("p",[e._v("禁止排除  "),a("code",[e._v(".eslintignore")]),e._v("、"),a("code",[e._v("--ignore-path")]),e._v("  和  "),a("code",[e._v("--ignore-pattern")]),e._v("  文件中指定的文件。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --no-ignore file.js\n\n")])])]),a("h4",{attrs:{id:"ignore-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignore-pattern"}},[e._v("#")]),e._v(" "),a("code",[e._v("--ignore-pattern")])]),e._v(" "),a("p",[e._v("该选项允许你指定要忽略的文件模式(除了那些在  "),a("code",[e._v(".eslintignore")]),e._v("  的)。你可以重复该选项已提供多个模式。语法同  "),a("code",[e._v(".eslintignore")]),e._v("  文件中的相同。你应该将你的模式用引号括起来，以避免命令行解析器的解析。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --ignore-pattern '/lib/' --ignore-pattern '/src/vendor/*' .\n\n")])])]),a("h3",{attrs:{id:"使用-stdin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-stdin"}},[e._v("#")]),e._v(" 使用 stdin")]),e._v(" "),a("h4",{attrs:{id:"stdin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stdin"}},[e._v("#")]),e._v(" "),a("code",[e._v("--stdin")])]),e._v(" "),a("p",[e._v("这个选项告诉 ESLint 从 STDIN 而不是从文件中读取和检测源码。你可以使用该选项向 ESLint 来输入代码。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cat myfile.js | eslint --stdin\n\n")])])]),a("h4",{attrs:{id:"stdin-filename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stdin-filename"}},[e._v("#")]),e._v(" "),a("code",[e._v("--stdin-filename")])]),e._v(" "),a("p",[e._v("这个选项允许你指定一个文件名去处理 STDIN。当你处理从 STDIN 来的文件和有规则依赖于这个文件名时，这会很有用。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cat myfile.js | eslint --stdin --stdin-filename=myfile.js\n\n")])])]),a("h3",{attrs:{id:"处理告警"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理告警"}},[e._v("#")]),e._v(" 处理告警")]),e._v(" "),a("h4",{attrs:{id:"quiet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quiet"}},[e._v("#")]),e._v(" "),a("code",[e._v("--quiet")])]),e._v(" "),a("p",[e._v("这个选项允许你禁止报告警告。如果开启这个选项，ESLint 只会报告错误。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --quiet file.js\n\n")])])]),a("h4",{attrs:{id:"max-warnings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max-warnings"}},[e._v("#")]),e._v(" "),a("code",[e._v("--max-warnings")])]),e._v(" "),a("p",[e._v("这个选项允许你指定一个警告的阈值，当你的项目中有太多违反规则的警告时，这个阈值被用来强制 ESLint 以错误状态退出。")]),e._v(" "),a("p",[e._v("通常情况下，如果 ESLint 运行过程中，没有出现错误（只有警告），它将以成功的状态退出。然而，如果指定了  "),a("code",[e._v("--max-warnings")]),e._v("，而且警告的总数超过了指定的阈值，ESLint 将以错误的状态退出。通过指定一个  "),a("code",[e._v("-1")]),e._v("  的阈值或省略这个选项将会避免这种行为。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --max-warnings 10 file.js\n\n")])])]),a("h3",{attrs:{id:"输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[e._v("#")]),e._v(" 输出")]),e._v(" "),a("h4",{attrs:{id:"o-output-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#o-output-file"}},[e._v("#")]),e._v(" "),a("code",[e._v("-o")]),e._v(", "),a("code",[e._v("--output-file")])]),e._v(" "),a("p",[e._v("将报告写到一个文件。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint -o ./test/test.html\n\n")])])]),a("p",[e._v("当指定这个选项时，就会按给定的格式输出到指定的文件名。")]),e._v(" "),a("h4",{attrs:{id:"f-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-format"}},[e._v("#")]),e._v(" "),a("code",[e._v("-f")]),e._v(", "),a("code",[e._v("--format")])]),e._v(" "),a("p",[e._v("这个选项指定了控制台的输出格式。可用的格式是：")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#codeframe",target:"_blank",rel:"noopener noreferrer"}},[e._v("codeframe"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#compact",target:"_blank",rel:"noopener noreferrer"}},[e._v("compact"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#html",target:"_blank",rel:"noopener noreferrer"}},[e._v("html"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#jslint-xml",target:"_blank",rel:"noopener noreferrer"}},[e._v("jslint-xml"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#json",target:"_blank",rel:"noopener noreferrer"}},[e._v("json"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#junit",target:"_blank",rel:"noopener noreferrer"}},[e._v("junit"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#stylish",target:"_blank",rel:"noopener noreferrer"}},[e._v("stylish"),a("OutboundLink")],1),e._v(" (the default)")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#table",target:"_blank",rel:"noopener noreferrer"}},[e._v("table"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#tap",target:"_blank",rel:"noopener noreferrer"}},[e._v("tap"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#unix",target:"_blank",rel:"noopener noreferrer"}},[e._v("unix"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/formatters/#visualstudio",target:"_blank",rel:"noopener noreferrer"}},[e._v("visualstudio"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint -f compact file.js\n\n")])])]),a("p",[e._v("你也可以在命令行中通过指定一个自定义的格式的文件路径来使用自定义的格式。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint -f ./customformat.js file.js\n\n")])])]),a("p",[e._v("当指定之后，给定的格式就输出到控制台。如果你想将输出保存到一个文件，你可以在命令行上这样操作：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint -f compact file.js > results.txt\n\n")])])]),a("p",[e._v("这会将输出保存到  "),a("code",[e._v("results.txt")]),e._v("  文件。")]),e._v(" "),a("h4",{attrs:{id:"color-no-color"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-no-color"}},[e._v("#")]),e._v(" "),a("code",[e._v("--color")]),e._v(", "),a("code",[e._v("--no-color")])]),e._v(" "),a("p",[e._v("在管道输出中禁用颜色。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --color file.js | cat\neslint --no-color file.js\n\n")])])]),a("h3",{attrs:{id:"杂项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杂项"}},[e._v("#")]),e._v(" 杂项")]),e._v(" "),a("h4",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[e._v("#")]),e._v(" "),a("code",[e._v("--init")])]),e._v(" "),a("p",[e._v("这个选项将会配置初始化向导。它被用来帮助新用户快速地创建  "),a("code",[e._v(".eslintrc")]),e._v("  文件，用户通过回答一些问题，选择一个流行的风格指南，或检查你的源文件，自动生成一个合适的配置。")]),e._v(" "),a("p",[e._v("生成的配置文件将被创建在当前目录。")]),e._v(" "),a("h4",{attrs:{id:"fix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix"}},[e._v("#")]),e._v(" "),a("code",[e._v("--fix")])]),e._v(" "),a("p",[e._v("该选项指示 ESLint 试图修复尽可能多的问题。修复只针对实际文件本身，而且剩下的未修复的问题才会输出。不是所有的问题都能使用这个选项进行修复，该选项在以下情形中不起作用：")]),e._v(" "),a("ol",[a("li",[e._v("当代码传递给 ESLint 时，这个选项抛出一个错误。")]),e._v(" "),a("li",[e._v("这个选项对使用处理器的代码不起作用。")])]),e._v(" "),a("h4",{attrs:{id:"debug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[e._v("#")]),e._v(" "),a("code",[e._v("--debug")])]),e._v(" "),a("p",[e._v("这个选项将调试信息输出到控制台。当你看到一个问题并且很难定位它时，这些调试信息会很有用。ESLint 团队可能会通过询问这些调试信息帮助你解决 bug。")]),e._v(" "),a("h4",{attrs:{id:"h-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h-help"}},[e._v("#")]),e._v(" "),a("code",[e._v("-h")]),e._v(", "),a("code",[e._v("--help")])]),e._v(" "),a("p",[e._v("这个选项会输出帮助菜单，显示所有可用的选项。当有这个选项时，忽略其他所有选项。")]),e._v(" "),a("h4",{attrs:{id:"v-version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-version"}},[e._v("#")]),e._v(" "),a("code",[e._v("-v")]),e._v(", "),a("code",[e._v("--version")])]),e._v(" "),a("p",[e._v("这个选项在控制台输出当前 ESlint 的版本。当有这个标记时，忽略其他所有标记。")]),e._v(" "),a("h4",{attrs:{id:"no-inline-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-inline-config"}},[e._v("#")]),e._v(" "),a("code",[e._v("--no-inline-config")])]),e._v(" "),a("p",[e._v("这个选项会阻止像  "),a("code",[e._v("/*eslint-disable*/")]),e._v("  或者  "),a("code",[e._v("/*global foo*/")]),e._v("  这样的内联注释起作用。这允许你在不修改文件的情况下设置一个 ESLint 配置。所有的内联注释都会被忽略，比如：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("/*eslint-disable*/")])]),e._v(" "),a("li",[a("code",[e._v("/*eslint-enable*/")])]),e._v(" "),a("li",[a("code",[e._v("/*global*/")])]),e._v(" "),a("li",[a("code",[e._v("/*eslint*/")])]),e._v(" "),a("li",[a("code",[e._v("/*eslint-env*/")])]),e._v(" "),a("li",[a("code",[e._v("// eslint-disable-line")])]),e._v(" "),a("li",[a("code",[e._v("// eslint-disable-next-line")])])]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --no-inline-config file.js\n\n")])])]),a("h4",{attrs:{id:"print-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#print-config"}},[e._v("#")]),e._v(" "),a("code",[e._v("--print-config")])]),e._v(" "),a("p",[e._v("这个选项输出传递的文件使用的配置。当有这个标记时，不进行检测，只有配置相关的选项才是有效的。")]),e._v(" "),a("p",[e._v("示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("eslint --print-config file.js\n\n")])])]),a("h2",{attrs:{id:"eslintignore-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslintignore-文件"}},[e._v("#")]),e._v(" .eslintignore 文件")]),e._v(" "),a("p",[e._v("当 ESLint 作用于一个目录时，ESLint 支持使用  "),a("code",[e._v(".eslintignore")]),e._v("  文件来避免检测处理。通过特定的命令行参数指定的文件就可以免除被忽略。"),a("code",[e._v(".eslintignore")]),e._v("  文件是个纯文本文件，每一行都包含一种模式。它可以放在目标目录的任何父级目录；它将影响到它所在的当前目录和所有子目录。这里是  "),a("code",[e._v(".eslintignore")]),e._v("  文件的一个简单示例：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("node_modules/*\n**/vendor/*.js\n\n")])])]),a("p",[e._v("ESLint 默认忽略的模式分解和目录的更多详细信息可以在  "),a("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/configuring#ignoring-files-and-directories",target:"_blank",rel:"noopener noreferrer"}},[e._v("Configuring ESLint"),a("OutboundLink")],1),e._v("  中找到。")])])}),[],!1,null,null,null);t.default=n.exports}}]);